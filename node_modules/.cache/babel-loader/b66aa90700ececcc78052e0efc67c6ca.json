{"ast":null,"code":"function shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n  while (currentIndex != 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n  return array;\n}\nexport default {\n  data() {\n    return {\n      threeLettersWords: \"яма, дом, кон, ром, лак, лор, вол, воз, ток, кот, лот, год, мак, бак, рак, мор, три, бра, топ, час, все, пот, мир, кал, юла, ель, ива, око, зло, миг, мел, лов, зов, мат, лад, жор, бит, акт, кол, рот, рок, рог, еда, боб, бор, лес, раб\",\n      fourLettersWords: \"авто, агат, ажур, аист, айва, алло, барс, бард, баня, бант, банк, балл, блиц, бобр, бюро, бюст, быль, было, буян, елей, если, едок, едва, енот, елка, желе, жнец, жезл, жижа, гипс, груз, гнет, гусь, гарь, вилы, воля, весь, ишак, изба, инок, ибис, икры, круг, кофе, ковш, клей, лето, ложа, лыко, наст, ночь, нива\",\n      fiveLettersWords: \"автор, анонс, архив, адрес, астра, булка, багор, баран, батон, вилла, вкруг, вовсю, волхв, гомон, греза, грязь, гамма, дымка, далее, десна, ездок, егерь, ехать, езжай, желчь, жабры, жизнь, жучок, изгиб, кивок, клерк, ковер, копия, крыша, лампа, легат, масло, месса, наказ, недуг, отруб, охота, обгон\",\n      rowsCount: 2,\n      colsCount: 2,\n      rrowsCount: 2,\n      ccolsCount: 2,\n      rw: 4,\n      lettersCount: 3,\n      positions: ['left', 'top', 'bottom', 'center', 'right'],\n      generated: [],\n      mode: 'letters'\n    };\n  },\n  methods: {\n    currentWords() {\n      let words = '';\n      switch (this.lettersCount) {\n        case 4:\n          words = shuffle(this.fourLettersWords.split(','));\n          break;\n        case 5:\n          words = shuffle(this.fiveLettersWords.split(','));\n          break;\n        default:\n          words = shuffle(this.threeLettersWords.split(','));\n      }\n      return words.map(word => {\n        let currentWord = '';\n        let currentLetterPositions = [];\n        let currentLetterPosition = '';\n        const _word = word.replace(' ', '');\n        return {\n          word: _word,\n          positions: _word.split('').map(() => {\n            if (currentWord !== _word) {\n              currentWord = _word;\n              currentLetterPositions = [...this.positions];\n            } else {\n              const curPosIndex = currentLetterPositions.findIndex(item => item === currentLetterPosition);\n              currentLetterPositions.splice(curPosIndex, 1);\n            }\n            currentLetterPosition = currentLetterPositions[this.randomIntFromInterval(0, currentLetterPositions.length - 1)];\n            return currentLetterPosition;\n          })\n        };\n      });\n    },\n    randomIntFromInterval(min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    },\n    generate() {\n      this.mode = 'letters';\n      this.rw = this.rowsCount * this.colsCount;\n      this.rrowsCount = this.rowsCount;\n      this.ccolsCount = this.colsCount;\n      this.generated = this.currentWords();\n    },\n    toggleAnswers() {\n      if (this.mode === 'letters') {\n        this.mode = 'words';\n      } else {\n        this.mode = 'letters';\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAkDA;EACA;IAAAA;EAEA;IACAA;IACAC;IACA,6CACAC;EACA;EACA;AACA;AAEA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;QACA;UACAC;UACA;QACA;UACAA;UACA;QACA;UACAA;MAAA;MAEA;QACA;QACA;QACA;QACA;QACA;UACAC;UACAN;YACA;cACAO;cACAC;YACA;cACA,2CACAC;cACAD;YACA;YACAE;YACA;UACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;QACA;MACA;QACA;MACA;IACA;EACA;AACA","names":["randomIndex","currentIndex","array","data","threeLettersWords","fourLettersWords","fiveLettersWords","rowsCount","colsCount","rrowsCount","ccolsCount","rw","lettersCount","positions","generated","mode","methods","currentWords","words","word","currentWord","currentLetterPositions","findIndex","currentLetterPosition","randomIntFromInterval","generate","toggleAnswers"],"sourceRoot":"src","sources":["GeneratorForm.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"form\">\n      <div class=\"row\">\n        <div class=\"col\">Кол-во столбцов</div>\n        <div class=\"col\">\n          <select v-model=\"colsCount\">\n            <template v-for=\"(val, idx) in 10\">\n              <option :value=\"val\" :key=\"idx\">{{ val }}</option>\n            </template>\n          </select>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">Кол-во строк</div>\n        <div class=\"col\">\n          <select v-model=\"rowsCount\">\n            <template v-for=\"(val, idx) in 10\">\n              <option :value=\"val\" :key=\"idx\">{{ val }}</option>\n            </template>\n          </select>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">Кол-во букв в словах</div>\n        <div class=\"col\">\n          <select v-model=\"lettersCount\">\n            <template v-for=\"(val, idx) in [3,4,5]\">\n              <option :value=\"val\" :key=\"idx\">{{ val }}</option>\n            </template>\n          </select>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">Слова</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <button @click=\"generate()\">Сгенерировать</button>\n          <button v-if=\"generated.length\" @click=\"toggleAnswers()\" class=\"button__answers\">Ответы</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"result\">\n      <div class=\"phone-ring\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nfunction shuffle(array) {\n  let currentIndex = array.length,  randomIndex\n\n  while (currentIndex != 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex)\n    currentIndex--\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]]\n  }\n  return array;\n}\n\nexport default {\n  data() {\n    return {\n      threeLettersWords: \"яма, дом, кон, ром, лак, лор, вол, воз, ток, кот, лот, год, мак, бак, рак, мор, три, бра, топ, час, все, пот, мир, кал, юла, ель, ива, око, зло, миг, мел, лов, зов, мат, лад, жор, бит, акт, кол, рот, рок, рог, еда, боб, бор, лес, раб\",\n      fourLettersWords: \"авто, агат, ажур, аист, айва, алло, барс, бард, баня, бант, банк, балл, блиц, бобр, бюро, бюст, быль, было, буян, елей, если, едок, едва, енот, елка, желе, жнец, жезл, жижа, гипс, груз, гнет, гусь, гарь, вилы, воля, весь, ишак, изба, инок, ибис, икры, круг, кофе, ковш, клей, лето, ложа, лыко, наст, ночь, нива\",\n      fiveLettersWords: \"автор, анонс, архив, адрес, астра, булка, багор, баран, батон, вилла, вкруг, вовсю, волхв, гомон, греза, грязь, гамма, дымка, далее, десна, ездок, егерь, ехать, езжай, желчь, жабры, жизнь, жучок, изгиб, кивок, клерк, ковер, копия, крыша, лампа, легат, масло, месса, наказ, недуг, отруб, охота, обгон\",\n      rowsCount: 2,\n      colsCount: 2,\n      rrowsCount: 2,\n      ccolsCount: 2,\n      rw: 4,\n      lettersCount: 3,\n      positions: ['left', 'top', 'bottom', 'center', 'right'],\n      generated: [],\n      mode: 'letters'\n    }\n  },\n  methods: {\n    currentWords() {\n      let words = ''\n      switch (this.lettersCount) {\n        case 4:\n          words = shuffle(this.fourLettersWords.split(','))\n          break;\n        case 5:\n          words = shuffle(this.fiveLettersWords.split(','))\n          break;\n        default:\n          words = shuffle(this.threeLettersWords.split(','))\n      }\n      return words.map((word) => {\n        let currentWord = ''\n        let currentLetterPositions = []\n        let currentLetterPosition = ''\n        const _word = word.replace(' ', '')\n        return {\n          word: _word,\n          positions: _word.split('').map(() => {\n            if (currentWord !== _word) {\n              currentWord = _word\n              currentLetterPositions = [...this.positions]\n            } else {\n              const curPosIndex = currentLetterPositions\n                  .findIndex((item) => item === currentLetterPosition)\n              currentLetterPositions.splice(curPosIndex, 1)\n            }\n            currentLetterPosition = currentLetterPositions[this.randomIntFromInterval(0, currentLetterPositions.length - 1)]\n            return currentLetterPosition\n          })\n        }\n      });\n    },\n    randomIntFromInterval(min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min)\n    },\n    generate() {\n      this.mode = 'letters'\n      this.rw = this.rowsCount * this.colsCount\n      this.rrowsCount = this.rowsCount\n      this.ccolsCount = this.colsCount\n      this.generated = this.currentWords()\n    },\n    toggleAnswers() {\n      if (this.mode === 'letters') {\n        this.mode = 'words'\n      } else {\n        this.mode = 'letters'\n      }\n    }\n  }\n}\n</script>\n<style>\n.form {\n  margin: 0 auto;\n  width: 500px;\n  padding: 24px;\n  border: 1px solid #9f9f9f;\n  border-radius: 6px;\n}\n.row {\n  display: flex;\n  align-items: center;\n  margin-bottom: 12px;\n}\n.row:last-child {\n  margin-bottom: 0;\n}\n.col {\n  flex: 1;\n  text-align: left;\n}\nselect {\n  padding: 4px 6px;\n  width: 80px;\n}\nbutton {\n  border: 1px solid #9f9f9f;\n  padding: 6px 10px;\n  border-radius: 4px;\n}\n.button__answers {\n  margin-left: 16px;\n}\n.phone-ring {\n  width:500px;\n  height: 500px;\n  border-radius: 500px;\n  position: relative;\n  background: pink;\n}\n.phone-ring:after {\n  content: \"\";\n  position: absolute;\n  top:90px;\n  left: 90px;\n  width: 320px;\n  height: 320px;\n  border-radius: 320px;\n  background: white;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}